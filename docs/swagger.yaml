basePath: /
definitions:
  model.AuthResponse:
    properties:
      token:
        type: string
    type: object
  model.LoginRequest:
    properties:
      email:
        maxLength: 100
        type: string
      password:
        maxLength: 255
        type: string
    required:
    - email
    - password
    type: object
  model.MetaPagination:
    properties:
      pagination:
        $ref: '#/definitions/model.PaginationMetaData'
    type: object
  model.PaginationLink:
    properties:
      next_page:
        type: string
      previous_page:
        type: string
    type: object
  model.PaginationMetaData:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      links:
        $ref: '#/definitions/model.PaginationLink'
      per_page:
        type: integer
      total:
        type: integer
      total_page:
        type: integer
    type: object
  model.RegisterRequest:
    properties:
      email:
        maxLength: 100
        type: string
      name:
        maxLength: 100
        type: string
      password:
        maxLength: 255
        type: string
    required:
    - email
    - name
    - password
    type: object
  model.Response:
    properties:
      code:
        type: integer
      data: {}
      errors: {}
      meta:
        $ref: '#/definitions/model.MetaPagination'
      status:
        type: string
    type: object
  model.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      photo:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: Go Clean Architecture With Fiber Framework
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go Clean Architecture With Fiber
  version: 1.0.0
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login user to create JWT Token
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Login user
      tags:
      - Auth
  /api/auth/profile:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - Auth
    patch:
      consumes:
      - application/json
      description: Update user profile
      parameters:
      - description: Name
        in: formData
        name: name
        type: string
      - description: Password
        in: formData
        name: password
        type: string
      - description: Photo
        in: formData
        name: photo
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - Bearer: []
      summary: Update user profile
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register user to create account
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/model.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Register user
      tags:
      - Auth
  /api/users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - Bearer: []
      summary: Get user
      tags:
      - User
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
